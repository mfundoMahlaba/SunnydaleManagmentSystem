@model WebApplication3.ViewModels.LearningMaterialUploadViewModel

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h4 class="mb-0 text-dark fw-bold">📤 Upload Learning Material</h4>
            <a href="@Url.Action("Dashboard", "Teacher")" class="btn btn-outline-secondary">
                <i class="fas fa-home me-1"></i> Back to Dashboard
            </a>
        </div>
        <div class="card-body">

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="d-flex justify-content-end mb-3">
                @Html.ActionLink("📂 View My Uploaded Materials", "MyMaterials", "Teacher", null, new { @class = "btn btn-outline-secondary" })
            </div>

            @using (Html.BeginForm("UploadMaterial", "Teacher", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="mb-3">
                    @Html.LabelFor(m => m.Title)
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = "Enter material title" })
                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Description)
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 3, placeholder = "Brief description of the material" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.SubjectId)
                    @Html.DropDownListFor(m => m.SubjectId, Model.SubjectOptions, "-- Select Subject --", new { @class = "form-select searchable-subject" })
                    @Html.ValidationMessageFor(m => m.SubjectId, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.File)
                    <input type="file" name="File" class="form-control" />
                    @Html.ValidationMessageFor(m => m.File, "", new { @class = "text-danger" })
                </div>

                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-upload me-1"></i> Upload
                </button>
            }
        </div>
    </div>
</div>

<script>
    setTimeout(function () {
        $('.alert-success').fadeOut('slow');
    }, 2000);
</script>
