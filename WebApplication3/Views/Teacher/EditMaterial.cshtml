@model WebApplication3.ViewModels.LearningMaterialUploadViewModel
@{
    ViewBag.Title = "Edit Material";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h3 class="mb-4">✏️ Edit Learning Material</h3>

    @using (Html.BeginForm("EditMaterial", "Teacher", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="mb-3">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.Description)
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 3 })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.SubjectId)
            @Html.DropDownListFor(m => m.SubjectId, Model.SubjectOptions, "-- Select Subject --", new { @class = "form-select searchable-subject" })
            @Html.ValidationMessageFor(m => m.SubjectId, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.File)
            <input type="file" name="File" class="form-control" />
            <small class="text-muted">Leave blank to keep existing file.</small>
        </div>

        <button type="submit" class="btn btn-primary">Update Material</button>
    }
</div>

<script>
    $(document).ready(function () {
        $('.searchable-subject').select2({
            placeholder: "Search subject...",
            allowClear: true,
            width: '100%'
        });
    });
</script>
